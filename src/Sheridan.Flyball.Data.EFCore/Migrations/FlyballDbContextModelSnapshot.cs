// <auto-generated />
using System;
using FlyballStatTracker.Data.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Sheridan.Flyball.Data.EFCore.Migrations
{
    [DbContext(typeof(FlyballDbContext))]
    partial class FlyballDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NafaClubNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BreakOutTime");

                    b.Property<string>("Name")
                        .HasMaxLength(10);

                    b.Property<int?>("RacingClassId");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("RacingClassId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NafaCrn")
                        .HasMaxLength(10);

                    b.Property<int>("PersonId");

                    b.Property<int?>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TeamId");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.DogPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DogId");

                    b.Property<int?>("HeatId");

                    b.Property<int?>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.HasIndex("HeatId");

                    b.HasIndex("PositionId");

                    b.ToTable("DogPositions");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.DogRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DogId");

                    b.Property<int?>("FaultId");

                    b.Property<int?>("HeatId");

                    b.Property<int?>("PositionId");

                    b.Property<double>("Time");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.HasIndex("FaultId");

                    b.HasIndex("HeatId");

                    b.HasIndex("PositionId");

                    b.ToTable("DogRuns");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Heat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeatNumber");

                    b.Property<double>("HeatTime");

                    b.Property<int?>("OutcomeId");

                    b.Property<int?>("RaceId");

                    b.HasKey("Id");

                    b.HasIndex("OutcomeId");

                    b.HasIndex("RaceId");

                    b.ToTable("Heats");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubId");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LaneSideId");

                    b.Property<int>("RaceNumber");

                    b.Property<int?>("TeamId");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("LaneSideId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.RaceYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("RaceYears");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId");

                    b.Property<int?>("DivisionId");

                    b.Property<double>("SeedTime");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RaceYearId");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("TournamentNumber");

                    b.HasKey("Id");

                    b.HasIndex("RaceYearId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Enumerations.Fault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Faults");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Enumerations.LaneSide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Lane");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Enumerations.Outcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Outcomes");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Enumerations.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Enumerations.RacingClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("RacingClasses");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Division", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Enumerations.RacingClass", "RacingClass")
                        .WithMany()
                        .HasForeignKey("RacingClassId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Tournament")
                        .WithMany("Divisions")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Dog", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.Person")
                        .WithMany("Dogs")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sheridan.Flyball.Core.Entities.Team")
                        .WithMany("Dogs")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.DogPosition", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.Dog", "Dog")
                        .WithMany()
                        .HasForeignKey("DogId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Heat")
                        .WithMany("Lineup")
                        .HasForeignKey("HeatId");

                    b.HasOne("Sheridan.Flyball.Core.Enumerations.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.DogRun", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.Dog", "Dog")
                        .WithMany()
                        .HasForeignKey("DogId");

                    b.HasOne("Sheridan.Flyball.Core.Enumerations.Fault", "Fault")
                        .WithMany()
                        .HasForeignKey("FaultId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Heat")
                        .WithMany("DogRuns")
                        .HasForeignKey("HeatId");

                    b.HasOne("Sheridan.Flyball.Core.Enumerations.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Heat", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Enumerations.Outcome", "Outcome")
                        .WithMany()
                        .HasForeignKey("OutcomeId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Race")
                        .WithMany("Heats")
                        .HasForeignKey("RaceId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Person", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.Club")
                        .WithMany("People")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Race", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Enumerations.LaneSide", "LaneSide")
                        .WithMany()
                        .HasForeignKey("LaneSideId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Tournament")
                        .WithMany("Races")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Team", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Division")
                        .WithMany("Teams")
                        .HasForeignKey("DivisionId");

                    b.HasOne("Sheridan.Flyball.Core.Entities.Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("Sheridan.Flyball.Core.Entities.Tournament", b =>
                {
                    b.HasOne("Sheridan.Flyball.Core.Entities.RaceYear", "RaceYear")
                        .WithMany()
                        .HasForeignKey("RaceYearId");
                });
#pragma warning restore 612, 618
        }
    }
}
